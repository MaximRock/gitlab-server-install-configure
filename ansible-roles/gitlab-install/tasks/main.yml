---
# tasks file for gitlab-install

- name: Create directory user Gitlab 
  ansible.builtin.file:
    path: "{{ gitlab_dir }}"
    state: "{{ gitlab_dir_state }}"
    owner: "{{ user_name }}"
  when: __user_vagrant is failed

- name: Create directory user Vagrant
  ansible.builtin.file:
    path: "{{ gitlab_dir_vagrant }}"
    state: "{{ gitlab_dir_state }}"
    owner: "{{ user_name_vagrant }}"
  when: __user_vagrant is succeeded

- name: Install Docker Module for Python
  ansible.builtin.pip:
    name:
      - "{{ item }}"
    state: "{{ state_present }}" 
  loop: "{{ docker_module }}"

- name: Copy file docker-compose.yml for user GitLab
  ansible.builtin.copy:
    src: "{{ docker_compose_src }}/{{ item }}"
    dest: "{{ (__user_vagrant is succeeded) | ternary(gitlab_dir_vagrant, gitlab_dir) }}/{{ item }}"
  with_items:
    - "{{ file_docker_compose_env }}"
 

# - name: Copy file docker-compose.yml for user Vagrant
#   ansible.builtin.copy:
#     src: "{{ docker_compose_src }}/{{ item }}"
#     dest: "{{ gitlab_dir_vagrant }}/{{ item }}"
#   with_items:
#     - "{{ file_docker_compose_env }}"
#   when: __user_vagrant is succeeded

- name: Install GitLab Server
  community.docker.docker_compose_v2:
    project_src: "{{ (__user_vagrant is succeeded) | ternary(gitlab_dir_vagrant, gitlab_dir) }}"
    files:
      - "{{ file_docker_compose }}"
    state: "{{ state_present }}"

- name: Install Gitlab Runner
  community.docker.docker_container:
    name: "{{ name_gitlab_runner }}"
    image: "{{ gitlab_runner_image }}"
    state: "{{ state_started }}"
    restart_policy: "{{ restart_policy }}"
    volumes: "{{ volumes_container }}"
